/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers'
import { Provider } from '@ethersproject/providers'
import type { Staker, StakerInterface } from '../Staker'

const _abi = [
    {
        inputs: [
            {
                internalType: 'contract IAlgebraPoolDeployer',
                name: '_deployer',
                type: 'address'
            },
            {
                internalType: 'contract INonfungiblePositionManager',
                name: '_nonfungiblePositionManager',
                type: 'address'
            },
            {
                internalType: 'contract IVirtualPoolDeployer',
                name: '_vdeployer',
                type: 'address'
            },
            {
                internalType: 'uint256',
                name: '_maxIncentiveStartLeadTime',
                type: 'uint256'
            },
            {
                internalType: 'uint256',
                name: '_maxIncentiveDuration',
                type: 'uint256'
            }
        ],
        stateMutability: 'nonpayable',
        type: 'constructor'
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'owner',
                type: 'address'
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'approved',
                type: 'address'
            },
            {
                indexed: true,
                internalType: 'uint256',
                name: 'tokenId',
                type: 'uint256'
            }
        ],
        name: 'Approval',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'owner',
                type: 'address'
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'operator',
                type: 'address'
            },
            {
                indexed: false,
                internalType: 'bool',
                name: 'approved',
                type: 'bool'
            }
        ],
        name: 'ApprovalForAll',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'uint256',
                name: 'tokenId',
                type: 'uint256'
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'oldOwner',
                type: 'address'
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'newOwner',
                type: 'address'
            }
        ],
        name: 'DepositTransferred',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'uint256',
                name: 'tokenId',
                type: 'uint256'
            },
            {
                indexed: true,
                internalType: 'bytes32',
                name: 'incentiveId',
                type: 'bytes32'
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'rewardAddress',
                type: 'address'
            },
            {
                indexed: false,
                internalType: 'address',
                name: 'bonusRewardToken',
                type: 'address'
            },
            {
                indexed: false,
                internalType: 'address',
                name: 'owner',
                type: 'address'
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'reward',
                type: 'uint256'
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'bonusReward',
                type: 'uint256'
            }
        ],
        name: 'FarmEnded',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'uint256',
                name: 'tokenId',
                type: 'uint256'
            },
            {
                indexed: true,
                internalType: 'uint256',
                name: 'L2tokenId',
                type: 'uint256'
            },
            {
                indexed: true,
                internalType: 'bytes32',
                name: 'incentiveId',
                type: 'bytes32'
            },
            {
                indexed: false,
                internalType: 'uint128',
                name: 'liquidity',
                type: 'uint128'
            }
        ],
        name: 'FarmStarted',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'contract IERC20Minimal',
                name: 'rewardToken',
                type: 'address'
            },
            {
                indexed: true,
                internalType: 'contract IERC20Minimal',
                name: 'bonusRewardToken',
                type: 'address'
            },
            {
                indexed: true,
                internalType: 'contract IAlgebraPool',
                name: 'pool',
                type: 'address'
            },
            {
                indexed: false,
                internalType: 'address',
                name: 'virtualPool',
                type: 'address'
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'startTime',
                type: 'uint256'
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'endTime',
                type: 'uint256'
            },
            {
                indexed: false,
                internalType: 'address',
                name: 'refundee',
                type: 'address'
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'reward',
                type: 'uint256'
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'bonusReward',
                type: 'uint256'
            }
        ],
        name: 'IncentiveCreated',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'incentiveMaker',
                type: 'address'
            },
            {
                indexed: true,
                internalType: 'address',
                name: '_incentiveMaker',
                type: 'address'
            }
        ],
        name: 'IncentiveMakerChanged',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'to',
                type: 'address'
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'reward',
                type: 'uint256'
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'rewardAddress',
                type: 'address'
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'owner',
                type: 'address'
            }
        ],
        name: 'RewardClaimed',
        type: 'event'
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'from',
                type: 'address'
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'to',
                type: 'address'
            },
            {
                indexed: true,
                internalType: 'uint256',
                name: 'tokenId',
                type: 'uint256'
            }
        ],
        name: 'Transfer',
        type: 'event'
    },
    {
        inputs: [],
        name: 'DOMAIN_SEPARATOR',
        outputs: [
            {
                internalType: 'bytes32',
                name: '',
                type: 'bytes32'
            }
        ],
        stateMutability: 'view',
        type: 'function'
    },
    {
        inputs: [],
        name: 'PERMIT_TYPEHASH',
        outputs: [
            {
                internalType: 'bytes32',
                name: '',
                type: 'bytes32'
            }
        ],
        stateMutability: 'view',
        type: 'function'
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'to',
                type: 'address'
            },
            {
                internalType: 'uint256',
                name: 'tokenId',
                type: 'uint256'
            }
        ],
        name: 'approve',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'owner',
                type: 'address'
            }
        ],
        name: 'balanceOf',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256'
            }
        ],
        stateMutability: 'view',
        type: 'function'
    },
    {
        inputs: [],
        name: 'baseURI',
        outputs: [
            {
                internalType: 'string',
                name: '',
                type: 'string'
            }
        ],
        stateMutability: 'view',
        type: 'function'
    },
    {
        inputs: [
            {
                internalType: 'contract IERC20Minimal',
                name: 'rewardToken',
                type: 'address'
            },
            {
                internalType: 'address',
                name: 'to',
                type: 'address'
            },
            {
                internalType: 'uint256',
                name: 'amountRequested',
                type: 'uint256'
            }
        ],
        name: 'claimReward',
        outputs: [
            {
                internalType: 'uint256',
                name: 'reward',
                type: 'uint256'
            }
        ],
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'contract IERC20Minimal',
                        name: 'rewardToken',
                        type: 'address'
                    },
                    {
                        internalType: 'contract IERC20Minimal',
                        name: 'bonusRewardToken',
                        type: 'address'
                    },
                    {
                        internalType: 'contract IAlgebraPool',
                        name: 'pool',
                        type: 'address'
                    },
                    {
                        internalType: 'uint256',
                        name: 'startTime',
                        type: 'uint256'
                    },
                    {
                        internalType: 'uint256',
                        name: 'endTime',
                        type: 'uint256'
                    },
                    {
                        internalType: 'address',
                        name: 'refundee',
                        type: 'address'
                    }
                ],
                internalType: 'struct IAlgebraFarming.IncentiveKey',
                name: 'key',
                type: 'tuple'
            },
            {
                internalType: 'uint256',
                name: 'reward',
                type: 'uint256'
            },
            {
                internalType: 'uint256',
                name: 'bonusReward',
                type: 'uint256'
            }
        ],
        name: 'createIncentive',
        outputs: [
            {
                internalType: 'address',
                name: 'virtualPool',
                type: 'address'
            }
        ],
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        inputs: [],
        name: 'deployer',
        outputs: [
            {
                internalType: 'contract IAlgebraPoolDeployer',
                name: '',
                type: 'address'
            }
        ],
        stateMutability: 'view',
        type: 'function'
    },
    {
        inputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256'
            }
        ],
        name: 'deposits',
        outputs: [
            {
                internalType: 'uint256',
                name: 'L2TokenId',
                type: 'uint256'
            },
            {
                internalType: 'address',
                name: 'owner',
                type: 'address'
            },
            {
                internalType: 'int24',
                name: 'tickLower',
                type: 'int24'
            },
            {
                internalType: 'int24',
                name: 'tickUpper',
                type: 'int24'
            }
        ],
        stateMutability: 'view',
        type: 'function'
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'contract IERC20Minimal',
                        name: 'rewardToken',
                        type: 'address'
                    },
                    {
                        internalType: 'contract IERC20Minimal',
                        name: 'bonusRewardToken',
                        type: 'address'
                    },
                    {
                        internalType: 'contract IAlgebraPool',
                        name: 'pool',
                        type: 'address'
                    },
                    {
                        internalType: 'uint256',
                        name: 'startTime',
                        type: 'uint256'
                    },
                    {
                        internalType: 'uint256',
                        name: 'endTime',
                        type: 'uint256'
                    },
                    {
                        internalType: 'address',
                        name: 'refundee',
                        type: 'address'
                    }
                ],
                internalType: 'struct IAlgebraFarming.IncentiveKey',
                name: 'key',
                type: 'tuple'
            },
            {
                internalType: 'uint256',
                name: 'tokenId',
                type: 'uint256'
            }
        ],
        name: 'enterFarming',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'contract IERC20Minimal',
                        name: 'rewardToken',
                        type: 'address'
                    },
                    {
                        internalType: 'contract IERC20Minimal',
                        name: 'bonusRewardToken',
                        type: 'address'
                    },
                    {
                        internalType: 'contract IAlgebraPool',
                        name: 'pool',
                        type: 'address'
                    },
                    {
                        internalType: 'uint256',
                        name: 'startTime',
                        type: 'uint256'
                    },
                    {
                        internalType: 'uint256',
                        name: 'endTime',
                        type: 'uint256'
                    },
                    {
                        internalType: 'address',
                        name: 'refundee',
                        type: 'address'
                    }
                ],
                internalType: 'struct IAlgebraFarming.IncentiveKey',
                name: 'key',
                type: 'tuple'
            },
            {
                internalType: 'uint256',
                name: 'tokenId',
                type: 'uint256'
            }
        ],
        name: 'exitFarming',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        inputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256'
            },
            {
                internalType: 'bytes32',
                name: '',
                type: 'bytes32'
            }
        ],
        name: 'farms',
        outputs: [
            {
                internalType: 'uint128',
                name: '',
                type: 'uint128'
            }
        ],
        stateMutability: 'view',
        type: 'function'
    },
    {
        inputs: [
            {
                internalType: 'uint256',
                name: 'tokenId',
                type: 'uint256'
            }
        ],
        name: 'getApproved',
        outputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address'
            }
        ],
        stateMutability: 'view',
        type: 'function'
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'contract IERC20Minimal',
                        name: 'rewardToken',
                        type: 'address'
                    },
                    {
                        internalType: 'contract IERC20Minimal',
                        name: 'bonusRewardToken',
                        type: 'address'
                    },
                    {
                        internalType: 'contract IAlgebraPool',
                        name: 'pool',
                        type: 'address'
                    },
                    {
                        internalType: 'uint256',
                        name: 'startTime',
                        type: 'uint256'
                    },
                    {
                        internalType: 'uint256',
                        name: 'endTime',
                        type: 'uint256'
                    },
                    {
                        internalType: 'address',
                        name: 'refundee',
                        type: 'address'
                    }
                ],
                internalType: 'struct IAlgebraFarming.IncentiveKey',
                name: 'key',
                type: 'tuple'
            },
            {
                internalType: 'uint256',
                name: 'tokenId',
                type: 'uint256'
            }
        ],
        name: 'getRewardInfo',
        outputs: [
            {
                internalType: 'uint256',
                name: 'reward',
                type: 'uint256'
            },
            {
                internalType: 'uint256',
                name: 'bonusReward',
                type: 'uint256'
            }
        ],
        stateMutability: 'view',
        type: 'function'
    },
    {
        inputs: [
            {
                internalType: 'bytes32',
                name: '',
                type: 'bytes32'
            }
        ],
        name: 'incentives',
        outputs: [
            {
                internalType: 'uint256',
                name: 'totalReward',
                type: 'uint256'
            },
            {
                internalType: 'uint256',
                name: 'bonusReward',
                type: 'uint256'
            },
            {
                internalType: 'address',
                name: 'virtualPoolAddress',
                type: 'address'
            },
            {
                internalType: 'uint96',
                name: 'numberOfFarms',
                type: 'uint96'
            },
            {
                internalType: 'bool',
                name: 'isPoolCreated',
                type: 'bool'
            },
            {
                internalType: 'uint224',
                name: 'totalLiquidity',
                type: 'uint224'
            }
        ],
        stateMutability: 'view',
        type: 'function'
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'owner',
                type: 'address'
            },
            {
                internalType: 'address',
                name: 'operator',
                type: 'address'
            }
        ],
        name: 'isApprovedForAll',
        outputs: [
            {
                internalType: 'bool',
                name: '',
                type: 'bool'
            }
        ],
        stateMutability: 'view',
        type: 'function'
    },
    {
        inputs: [],
        name: 'maxIncentiveDuration',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256'
            }
        ],
        stateMutability: 'view',
        type: 'function'
    },
    {
        inputs: [],
        name: 'maxIncentiveStartLeadTime',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256'
            }
        ],
        stateMutability: 'view',
        type: 'function'
    },
    {
        inputs: [
            {
                internalType: 'bytes[]',
                name: 'data',
                type: 'bytes[]'
            }
        ],
        name: 'multicall',
        outputs: [
            {
                internalType: 'bytes[]',
                name: 'results',
                type: 'bytes[]'
            }
        ],
        stateMutability: 'payable',
        type: 'function'
    },
    {
        inputs: [],
        name: 'name',
        outputs: [
            {
                internalType: 'string',
                name: '',
                type: 'string'
            }
        ],
        stateMutability: 'view',
        type: 'function'
    },
    {
        inputs: [],
        name: 'nonfungiblePositionManager',
        outputs: [
            {
                internalType: 'contract INonfungiblePositionManager',
                name: '',
                type: 'address'
            }
        ],
        stateMutability: 'view',
        type: 'function'
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address'
            },
            {
                internalType: 'address',
                name: 'from',
                type: 'address'
            },
            {
                internalType: 'uint256',
                name: 'tokenId',
                type: 'uint256'
            },
            {
                internalType: 'bytes',
                name: 'data',
                type: 'bytes'
            }
        ],
        name: 'onERC721Received',
        outputs: [
            {
                internalType: 'bytes4',
                name: '',
                type: 'bytes4'
            }
        ],
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        inputs: [
            {
                internalType: 'uint256',
                name: 'tokenId',
                type: 'uint256'
            }
        ],
        name: 'ownerOf',
        outputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address'
            }
        ],
        stateMutability: 'view',
        type: 'function'
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'spender',
                type: 'address'
            },
            {
                internalType: 'uint256',
                name: 'tokenId',
                type: 'uint256'
            },
            {
                internalType: 'uint256',
                name: 'deadline',
                type: 'uint256'
            },
            {
                internalType: 'uint8',
                name: 'v',
                type: 'uint8'
            },
            {
                internalType: 'bytes32',
                name: 'r',
                type: 'bytes32'
            },
            {
                internalType: 'bytes32',
                name: 's',
                type: 'bytes32'
            }
        ],
        name: 'permit',
        outputs: [],
        stateMutability: 'payable',
        type: 'function'
    },
    {
        inputs: [
            {
                internalType: 'contract IERC20Minimal',
                name: '',
                type: 'address'
            },
            {
                internalType: 'address',
                name: '',
                type: 'address'
            }
        ],
        name: 'rewards',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256'
            }
        ],
        stateMutability: 'view',
        type: 'function'
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'from',
                type: 'address'
            },
            {
                internalType: 'address',
                name: 'to',
                type: 'address'
            },
            {
                internalType: 'uint256',
                name: 'tokenId',
                type: 'uint256'
            }
        ],
        name: 'safeTransferFrom',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'from',
                type: 'address'
            },
            {
                internalType: 'address',
                name: 'to',
                type: 'address'
            },
            {
                internalType: 'uint256',
                name: 'tokenId',
                type: 'uint256'
            },
            {
                internalType: 'bytes',
                name: '_data',
                type: 'bytes'
            }
        ],
        name: 'safeTransferFrom',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'operator',
                type: 'address'
            },
            {
                internalType: 'bool',
                name: 'approved',
                type: 'bool'
            }
        ],
        name: 'setApprovalForAll',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: '_incentiveMaker',
                type: 'address'
            }
        ],
        name: 'setIncentiveMaker',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        inputs: [
            {
                internalType: 'bytes4',
                name: 'interfaceId',
                type: 'bytes4'
            }
        ],
        name: 'supportsInterface',
        outputs: [
            {
                internalType: 'bool',
                name: '',
                type: 'bool'
            }
        ],
        stateMutability: 'view',
        type: 'function'
    },
    {
        inputs: [],
        name: 'symbol',
        outputs: [
            {
                internalType: 'string',
                name: '',
                type: 'string'
            }
        ],
        stateMutability: 'view',
        type: 'function'
    },
    {
        inputs: [
            {
                internalType: 'uint256',
                name: 'index',
                type: 'uint256'
            }
        ],
        name: 'tokenByIndex',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256'
            }
        ],
        stateMutability: 'view',
        type: 'function'
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'owner',
                type: 'address'
            },
            {
                internalType: 'uint256',
                name: 'index',
                type: 'uint256'
            }
        ],
        name: 'tokenOfOwnerByIndex',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256'
            }
        ],
        stateMutability: 'view',
        type: 'function'
    },
    {
        inputs: [
            {
                internalType: 'uint256',
                name: 'tokenId',
                type: 'uint256'
            }
        ],
        name: 'tokenURI',
        outputs: [
            {
                internalType: 'string',
                name: '',
                type: 'string'
            }
        ],
        stateMutability: 'view',
        type: 'function'
    },
    {
        inputs: [],
        name: 'totalSupply',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256'
            }
        ],
        stateMutability: 'view',
        type: 'function'
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'from',
                type: 'address'
            },
            {
                internalType: 'address',
                name: 'to',
                type: 'address'
            },
            {
                internalType: 'uint256',
                name: 'tokenId',
                type: 'uint256'
            }
        ],
        name: 'transferFrom',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function'
    },
    {
        inputs: [],
        name: 'vdeployer',
        outputs: [
            {
                internalType: 'contract IVirtualPoolDeployer',
                name: '',
                type: 'address'
            }
        ],
        stateMutability: 'view',
        type: 'function'
    },
    {
        inputs: [
            {
                internalType: 'uint256',
                name: 'tokenId',
                type: 'uint256'
            },
            {
                internalType: 'address',
                name: 'to',
                type: 'address'
            },
            {
                internalType: 'bytes',
                name: 'data',
                type: 'bytes'
            }
        ],
        name: 'withdrawToken',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function'
    }
]

export class Staker__factory {
    static readonly abi = _abi

    static createInterface(): StakerInterface {
        return new utils.Interface(_abi) as StakerInterface
    }

    static connect(address: string, signerOrProvider: Signer | Provider): Staker {
        return new Contract(address, _abi, signerOrProvider) as Staker
    }
}
